{
    "project": {
        "name": "i-Learner Studio Admin API",
        "description": "The SDK for interacting with the i-Learner Studio Admin system",
        "version": "1.0.0",
        "url": "http://127.0.0.1/c/Dashboard"
    },
    "files": {
        "calendar.js": {
            "name": "calendar.js",
            "modules": {
                "Calendar": 1
            },
            "classes": {
                "Lesson": 1,
                "Course": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "core.js": {
            "name": "core.js",
            "modules": {
                "Core": 1
            },
            "classes": {
                "Tutor": 1,
                "Room": 1,
                "Util": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "report.js": {
            "name": "report.js",
            "modules": {
                "Report": 1
            },
            "classes": {
                "Report": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Calendar": {
            "name": "Calendar",
            "submodules": {},
            "classes": {
                "Lesson": 1,
                "Course": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "calendar.js",
            "line": 338,
            "description": "Calendar module. Contains Lesson and Course classes."
        },
        "Core": {
            "name": "Core",
            "submodules": {},
            "classes": {
                "Tutor": 1,
                "Room": 1,
                "Util": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "core.js",
            "line": 254,
            "description": "Core module. Contains Tutor, Room classes as well as Utility submodule"
        },
        "Report": {
            "name": "Report",
            "submodules": {},
            "classes": {
                "Report": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "report.js",
            "line": 22,
            "description": "Report module. Contains Report class."
        }
    },
    "classes": {
        "Lesson": {
            "name": "Lesson",
            "shortname": "Lesson",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Calendar",
            "namespace": "",
            "file": "calendar.js",
            "line": 33,
            "description": "Lesson class for dealing with lesson instances happening\nat a specific time on a specific date"
        },
        "Course": {
            "name": "Course",
            "shortname": "Course",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Calendar",
            "namespace": "",
            "file": "calendar.js",
            "line": 338,
            "description": "Class to deal with courses. Courses generally run for a number of weeks\nand contain lesson instances"
        },
        "Tutor": {
            "name": "Tutor",
            "shortname": "Tutor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "",
            "file": "core.js",
            "line": 92,
            "description": "Used for interacting with tutors"
        },
        "Room": {
            "name": "Room",
            "shortname": "Room",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "",
            "file": "core.js",
            "line": 177,
            "description": "Class for using rooms"
        },
        "Util": {
            "name": "Util",
            "shortname": "Util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Core",
            "namespace": "",
            "file": "core.js",
            "line": 254,
            "description": "Utility Class"
        },
        "Report": {
            "name": "Report",
            "shortname": "Report",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Report",
            "namespace": "",
            "file": "report.js",
            "line": 22,
            "description": "Class for dealing with report cards"
        }
    },
    "classitems": [
        {
            "file": "calendar.js",
            "line": 40,
            "description": "Get a lesson specified by its ID",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "Lesson ID",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Object representing the lesson",
                "type": "Object"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 52,
            "description": "Find a lesson with specific conditions",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "options",
                    "description": "A map of options",
                    "type": "Object",
                    "props": [
                        {
                            "name": "start",
                            "description": "Only return lessons which start after this date",
                            "type": "Date"
                        },
                        {
                            "name": "tutor",
                            "description": "Restrict lessons to only those taught by the\nspecified tutor",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise of an array of lesson objects",
                "type": "Promise"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 191,
            "description": "Save lesson changes back to the server",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "lesson",
                    "description": "lesson object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise of completion",
                "type": "Promise"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 247,
            "description": "Get previous lesson in series of course",
            "itemtype": "method",
            "name": "prev",
            "params": [
                {
                    "name": "lesson",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise of lesson object",
                "type": "Promise"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 266,
            "description": "Get next lesson in series of course",
            "itemtype": "method",
            "name": "next",
            "params": [
                {
                    "name": "lesson",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise of a lesson",
                "type": "Promise"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 285,
            "description": "Get a collection of all future lessons of the same course",
            "itemtype": "method",
            "name": "future",
            "params": [
                {
                    "name": "lesson",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise of an array of lessons",
                "type": "Promise"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 304,
            "description": "Get details of the students registered for a lesson",
            "itemtype": "method",
            "name": "students",
            "params": [
                {
                    "name": "lesson",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "An array of students",
                "type": "Promise"
            },
            "class": "Lesson",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 345,
            "description": "Get a specifi course",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "ID of course to get",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Course object",
                "type": "Object"
            },
            "class": "Course",
            "module": "Calendar"
        },
        {
            "file": "calendar.js",
            "line": 357,
            "description": "Get all lessons for this course",
            "itemtype": "method",
            "name": "lessons",
            "params": [
                {
                    "name": "course",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise of an array",
                "type": "Promise"
            },
            "class": "Course",
            "module": "Calendar"
        },
        {
            "file": "core.js",
            "line": 98,
            "description": "Get a single tutor specified by his ID",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the tutor you with to fetch",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Object containing the details of the tutor",
                "type": "Object"
            },
            "class": "Tutor",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 126,
            "description": "Find a single tutor specified by his name",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the tutor you with to fetch",
                    "type": "String"
                },
                {
                    "name": "fallback",
                    "description": "If true will return a constructed object\neven if a corresponding one  was not found on the server",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "Object containing the details of the tutor",
                "type": "Object"
            },
            "class": "Tutor",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 162,
            "description": "Get a colour associated with this tutor",
            "itemtype": "method",
            "name": "colour",
            "params": [
                {
                    "name": "tutor",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Colour in the format `#FFFFFF`",
                "type": "String"
            },
            "class": "Tutor",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 183,
            "description": "Get a room by ID",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "ID of the Room to get",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Object with details of the room",
                "type": "Object"
            },
            "class": "Room",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 195,
            "description": "Get all rooms",
            "itemtype": "method",
            "name": "all",
            "return": {
                "description": "Promise of an array rooms",
                "type": "Promise"
            },
            "class": "Room",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 226,
            "description": "Find a room by name",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Object describing room",
                "type": "Object"
            },
            "class": "Room",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 260,
            "description": "Format date in server specific format",
            "itemtype": "method",
            "name": "formatDate",
            "static": 1,
            "params": [
                {
                    "name": "date",
                    "description": "Javascript Date object representing the date to format",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Date in format `YYYY/m/d`",
                "type": "String"
            },
            "class": "Util",
            "module": "Core"
        },
        {
            "file": "core.js",
            "line": 274,
            "description": "Useful function to set the name on any object with a `name` property.\n\nParses names to extract forename and surname as well as combinations\nfor English and Chinese names. It recognises common Chinese surnames\nto avoid confusion with English name first vs. English name last.\n\nThis method modifies the original object by adding the properties:\n`forename`, `surname`, `englishName` and `chineseName`.",
            "itemtype": "method",
            "name": "parseName",
            "params": [
                {
                    "name": "person",
                    "description": "Object with a `name` property",
                    "type": "Object"
                }
            ],
            "class": "Util",
            "module": "Core"
        },
        {
            "file": "report.js",
            "line": 28,
            "description": "Get an array of report card stubs",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "options",
                    "description": "Object describing search parameters",
                    "type": "Object",
                    "props": [
                        {
                            "name": "tutor",
                            "description": "Only get reports for this tutor",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "from",
                            "description": "Reports for lessons which occur after this date",
                            "type": "Date",
                            "optional": true
                        },
                        {
                            "name": "to",
                            "description": "Reports for lessons which occur before this date",
                            "type": "Date",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns a promise object which can be used to wait for results",
                "type": "Promise"
            },
            "class": "Report",
            "module": "Report"
        },
        {
            "file": "report.js",
            "line": 91,
            "description": "Given a report stub this method provides the full report card details",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "item",
                    "description": "Report",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise object which can be used to wait for results",
                "type": "Promise"
            },
            "class": "Report",
            "module": "Report"
        },
        {
            "file": "report.js",
            "line": 141,
            "description": "When provided with a full report object this method will save the report\nback to the server.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "item",
                    "description": "Report",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "can be used to wait for results",
                "type": "Promise"
            },
            "class": "Report",
            "module": "Report"
        },
        {
            "file": "report.js",
            "line": 161,
            "description": "Static method to get comment templates",
            "itemtype": "method",
            "name": "getComments",
            "static": 1,
            "return": {
                "description": "Promise of an array",
                "type": "Promise"
            },
            "class": "Report",
            "module": "Report"
        },
        {
            "file": "report.js",
            "line": 217,
            "description": "Get Learning focuses for courses",
            "itemtype": "method",
            "name": "getCourseLearningFocus",
            "static": 1,
            "params": [
                {
                    "name": "courseName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Promise of an array",
                "type": "Promise"
            },
            "class": "Report",
            "module": "Report"
        },
        {
            "file": "report.js",
            "line": 247,
            "description": "Set course learning objective for a course\n\nDOES NOT save back to server, only for current session",
            "itemtype": "method",
            "name": "setCourseLearningFocus",
            "static": 1,
            "params": [
                {
                    "name": "courseName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "focus",
                    "description": "Which of the four fields to set",
                    "type": "String"
                },
                {
                    "name": "objective",
                    "description": "Actual text of the objective",
                    "type": "String"
                }
            ],
            "class": "Report",
            "module": "Report"
        }
    ],
    "warnings": []
}